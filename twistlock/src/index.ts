import { setupCli } from "./twistlock";
import { SetupCliReturn, TwistlockResults, TwistlockRun } from "./twistlock";
import { yarnWhyFormat } from "./yarnWhyFormat";
import { postGithubComment } from "./githubComment";
import * as core from "@actions/core";

const tag =
  '\n<p align="right"><em>Generated by <a href="https://github.com/resideo/actions/tree/master/twistlock">resideo/actions/twistlock</a>.<br>Please <a href="https://github.com/resideo/actions/issues/new">create an issue</a> in the repository if you have any feedback.<em></p><!-- Twistlock Action by Frontside Software -->';

export function* run({
  user,
  password,
  token,
  consoleUrl,
  project,
  repositoryPath,
  image,
  githubComment,
  scanPathScope,
  octokit,
}: TwistlockRun) {
  const twistcli: SetupCliReturn = yield setupCli({
    user,
    password,
    token,
    consoleUrl,
    project,
  });

  console.log(`running in ${repositoryPath}`);
  const { results, code }: { results: TwistlockResults; code: number } =
    yield twistcli.scanRepository({
      repositoryPath,
      image,
    });

  const { message, graceStatus } = yield yarnWhyFormat({
    message: results,
    tag,
    repositoryPath,
    scanPathScope,
  });

  console.log("::group::comment");
  console.dir(message);
  console.log("::endgroup::");
  if (githubComment) yield postGithubComment(octokit, { message, tag });
  if (graceStatus !== "pass")
    core.setFailed("One or more packages have an overdue security resolution.");
  if (code !== 0)
    core.warning(
      `CLI exited with code ${code}. This implies there may be compliance issues.`
    );
}
